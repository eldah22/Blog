@model SABlog.ViewModels.LoginViewModel

@{
    ViewBag.Title = "Logohu";
}

<br />
<section class="vh-50">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                @using (Html.BeginForm("Login", "Auth", FormMethod.Post, new { @class = "needs-validation", @novalidate = true }))
                {
                <div class="d-flex flex-column align-items-center justify-content-center justify-content-lg-start">
                    <p class="lead fw-normal mb-0 me-3">Logohu</p>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                </div>

                    <div class="divider d-flex align-items-center my-4"></div>

                    <!-- Email input -->
                    <div class="form-outline mb-4">
                        <label class="form-label" for="form3Example3">Email / Pseudonimi</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-lg", type="text", @placeholder = "Shkruaj Emailin ose Pseudonimin", @required = true, maxlength = "50", onkeyup = "removeSpaces(this)", style="max-width: 100%" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        <div class="invalid-feedback">Ju lutem plotësoni fushën "Email / Pseudonimi"!</div>
                    </div>

                    <!-- Password input -->
                    <div class="form-outline mb-4">
                        <label class="form-label" for="form3Example4">Fjalëkalimi</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-lg", type = "password", @placeholder = "Shkruaj Fjalëkalimin", @required = true, onkeyup = "removeLeadingSpaces(this)", style = "max-width: 100%" } })
                            <span class="input-group-text togglePassword">
                                <i class="fa fa-eye" id="showPassword" onclick="togglePasswordVisiblity()" style="cursor: pointer"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <div class="invalid-feedback">Ju lutem plotësoni fushën "Fjalëkalimi"!</div>
                        </div>
                    </div>

                  

                    <div class="text-center text-lg-start mt-4 pt-2">
                        <button type="submit" class="btn btn-success ms-auto m-2"
                                style="padding-left: 2.5rem; padding-right: 2.5rem;">
                            Logohu
                        </button>
                       
                        <p class="small fw-bold mt-2 pt-1 mb-0">
                            Nuk ke llogari? <a href="/Auth/Register"
                                               class="link-danger">Regjistrohu</a>
                        </p>
                    </div>
                    

                }
            </div>
        </div>
    </div>
</section>


<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        
    });

    function togglePasswordVisiblity() {
        $("#showPassword").removeClass()
        if ($("#Password").attr('type') == 'password') {
            $("#showPassword").attr('class', 'fa fa-eye-slash')
            $("#Password").attr('type', 'text')
        } else {
            $("#showPassword").attr('class', 'fa fa-eye')
            $("#Password").attr('type', 'password')
        }
    }

</script>

<script src="~/Assets/common.js"></script>